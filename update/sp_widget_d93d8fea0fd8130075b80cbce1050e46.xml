<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(spUtil, spModal) {
	/* widget controller */
	var c = this;

	c.updateNote = function() {
		//Note changed - Update note and then update list
		if(!c.data.newnote) {
			c.server.get({
				action:			'updateNote',
				noteID:			c.data.noteID,
				noteTitle:	c.data.title,
				noteBody:		c.data.note
			}).then(function(){
				//Since we updated a note, let's inform the list to reflect change in the single note
				$rootScope.$emit('updateList', {'noteID': c.data.noteID});
			});
		}
	}

	c.createNote = function() {
		//Create new note, update note details and reload list
		c.data.noteID = null;
		if(c.data.title && c.data.note) {
			c.server.get({
				action:	'createNote',
				title:	c.data.title,
				note:		c.data.note
			}).then(function(r){
				//returned from ajax call creating new note so invoke list widget to reload
				if(r.data.note.noteID) {
					c.data.noteID		= r.data.note.noteID; //displayed at top of body
					c.data.number		= r.data.note.number; //displayed at top of body
					c.data.newnote	= false;
					$rootScope.$emit('updateList', {});
					spUtil.addTrivialMessage('Successfully created new Note');
				}
				else {
					spUtil.addErrorMessage('Error: Unable to create Note!');					
				}
			});
		}
		else {
			spUtil.addErrorMessage('Please enter values for both Title and Note');			
		}
	}

	c.closeNote = function(){
		//Close/Cancel note body
		c.data.noteID		= null;
		c.data.newnote	= false;
	}

	//Event handler emitted from list widget when user clicked on note in list
	$rootScope.$on('selectNote', function(event, data){
		c.data.newnote = false;
		c.server.get({
			//User clicked on a note in list so execute ajax call to server to retrieve note from database
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r){
			//returned from ajax call so update data object for list widget
			c.data.noteID	= r.data.note.sys_id;
			c.data.number	= r.data.note.number;
			c.data.title	= r.data.note.title;
			c.data.note		= r.data.note.note;
			setTimeout(function(){ $('#note-title').focus(); }, 250);		
		});
	});

	//Event handler emitted from list widget when user clicked on New Note button
	$rootScope.$on('displayCreateNote', function(event, data){
		c.data.newnote	= true;
		c.data.title		= c.data.note = null;
		setTimeout(function(){ $('#note-title').focus(); }, 250);		
	});
	//Display 'are you sure' modal dialog and if yes, delete note and then reload list
	c.confirmDeleteNote = function() {
		spModal.confirm("Are you sure you want to delete this Note?<br/><br/><b>" + c.data.title + "</b><br/>" + c.data.note).then(function(confirmed) {
			c.server.get({
				action:	'deleteNote',
				noteID:	c.data.noteID
			}).then(function(r){
				//returned from ajax call creating new note so invoke list widget to reload
				if(r.data.wasDeleted) {
					c.data.noteID = null;
					spUtil.addInfoMessage('Successfully deleted Note');
					$rootScope.$emit('updateList', {});
				}
				else {
					spUtil.addErrorMessage('Error: Unable to delete Note!');			
				}
			});
		})
	}	
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.body-container { margin-left:-20px; }
.info { font-size:10px; }
.mt50 { margin-top:50px; } 
.mt10 { margin-top:10px; }
.m15 { margin:15px; }
.fl { float:left; }
.fr { float:right; }
.inline { display:inline-block; }
textarea#note-body { min-height:411px; resize:vertical; }
.bottom-panel { border-top:1px solid #ddd;padding-top:12px;margin:0 15px 15px 15px; }
.view-area { width:847px;height:644px }
.view-area-inner { border:1px solid #d8d8d8; height:600px; background-color: #f5f5f5; margin:20px; padding:170px 50px; }
.main-title { margin-top:-16px; font-size:44px; font-weight:bold; }
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	data.note = {};

	if(input) {
		if(input.noteID) {
			var _gr = new GlideRecord('x_snc_createnotes_note');

			if(_gr.get(input.noteID)) {
				if(input.action == 'getNote') {
					data.note.sys_id	= _gr.sys_id.toString();
					data.note.number	= _gr.number.toString();
					data.note.title		= _gr.title.toString();
					data.note.note		= _gr.note.toString();
					//$sp.getRecordValues(data.note, _gr, "title, note, sys_id");
				}		
				else if(input.action == 'updateNote') {
					console.log('Ready to persist note: ' + input.noteID);
					_gr.title	= input.noteTitle;
					_gr.note	= input.noteBody;
					_gr.update();
				}
			}
		}
		else if(input.action == 'createNote') {
			if(input.title && input.note) {
				var _gr2 = new GlideRecord('x_snc_createnotes_note');
				_gr2.initialize();
				_gr2.user					= gs.getUserID();
				_gr2.title				= input.title;
				_gr2.note					= input.note;
				data.note.noteID	= _gr2.insert();
				data.note.number	= _gr2.number.toString();
			}
			else {
				spUtil.addErrorMessage('ERROR: server-side unable to create note.');
			}
		}
		if(input.noteID && input.action == 'deleteNote') {
			var _gr3 = new GlideRecord('x_snc_createnotes_note');
			_gr3.addQuery('sys_id', input.noteID);
			_gr3.query();
			_gr3.next();
			data.wasDeleted = _gr3.deleteRecord();
		}
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-02-18 18:02:05</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>d93d8fea0fd8130075b80cbce1050e46</sys_id>
        <sys_mod_count>240</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_d93d8fea0fd8130075b80cbce1050e46</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-23 21:07:28</sys_updated_on>
        <template><![CDATA[<div class="body-container">
  <div class="panel panel-default" ng-show="c.data.noteID||c.data.newnote">
    <div class="panel-heading clearfix">
      <div class="row">
        <div class="col-md-12">
          <div><h3 ng-show="!c.data.newnote">View Note</h3><h3 ng-show="c.data.newnote">Create New Note</h3></div>
          <div class="inline fl info" ng-show="!c.data.newnote">(Number:  {{c.data.number}})</div>
          <div class="inline fr info" ng-show="!c.data.newnote">(Note ID:  {{c.data.noteID}})</div>
          <div class="fl info" ng-show="c.data.newnote">Title:</div>
          <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote()" ng-model-options="{debounce:1000}" />
        </div>
      </div>
    </div>
    <div class="panel-body">
      <div class="fl info">Note:</div>
      <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote()" ng-model-options="{debounce:1000}" ></textarea>
    </div>
    <div class="bottom-panel">
      <button ng-click="c.confirmDeleteNote()" class="btn btn-default" ng-show="!c.data.newnote">Delete Note</button>
      <button ng-click="c.createNote()" class="btn btn-default" ng-show="c.data.newnote">Create Note</button>
      <button ng-click="c.closeNote()" class="btn btn-default fr" ng-show="c.data.newnote">Cancel</button>
      <button ng-click="c.closeNote()" class="btn btn-default fr" ng-show="!c.data.newnote">Close</button>
    </div>
  </div>
  <div class="panel panel-default view-area" ng-show="!c.data.noteID&&!c.data.newnote">
    <div class="view-area-inner">
      <div class="text-center text-uppercase font-weight-bold">
        <img width="261" height="78" src="https://dev38293.service-now.com/84e89aa1094232007f44e1046c8ff69c.iix"/>
        <h1 class="main-title">Note Viewer</h1>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
